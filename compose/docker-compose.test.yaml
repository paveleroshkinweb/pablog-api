version: "3"


services:

  test:
    build:
      context: ../
      target: test
    command: integration
    env_file:
      - ../tests/integration/.env.test
    depends_on:
      nginx:
        condition: service_healthy

  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/extra_headers.conf:/etc/nginx/extra_headers.conf:ro
      - ./nginx/disable_logs.conf:/etc/nginx/disable_logs.conf:ro
      - app_runtime:/var/run/pablog-service/
    depends_on:
      - api
    healthcheck:
      test: curl -s http://127.0.0.1:8001/api/v1/healthcheck > /dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 5

  api:
    build:
      context: ../
      target: prod
    env_file:
      - ./server/.env.server
    volumes:
      - app_runtime:/var/run/pablog-service/
    depends_on:
      master_db:
        condition: service_healthy
      cache:
        condition: service_healthy

  master_db:
    image: postgres:16.2
    command: -c config_file=/etc/postgresql/postgresql.conf
    env_file:
      - ./db/.env.db
    volumes:
      - ./db/master.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 5s
      timeout: 10s
      retries: 5

  cache:
    image: redis:7.2.5
    entrypoint: [ "redis-server", "/etc/redis/redis.conf" ]
    volumes:
      - ./cache/redis-test.conf:/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 10


volumes:
  app_runtime: